/* XPECT_SETUP com.telluriumlang.tellurium.xpect.TelluriumXPectGeneratorTest END_SETUP */

/**
XPECT generated file com/telluriumlang/tellurium/xpect/TelluriumXPectGeneratorTestxt.java ---
package com.telluriumlang.tellurium.xpect;

import java.util.concurrent.TimeUnit;
   
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.interactions.*;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import java.util.List;

public class TelluriumXPectGeneratorTestxt {
	
	
	private static WebDriver driver;
	
	@Before
	public void setup() {
		if(driver == null){
			driver = new ChromeDriver();
		}
		
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	}
	
	@Test
	public void selectorTest() {
		//target:driver.findElement(By.id("id"))
		new Actions(driver).click(driver.findElement(By.id("id"))).perform();
		//target:driver.findElement(By.className("class"))
		new Actions(driver).click(driver.findElement(By.className("class"))).perform();
		//target:driver.findElement(By.tagName("name"))
		new Actions(driver).click(driver.findElement(By.tagName("name"))).perform();
		//target:driver.findElement(By.cssSelector("#id > li"))
		new Actions(driver).click(driver.findElement(By.cssSelector("#id > li"))).perform();
		//target:driver.findElement(By.xpath("/html"))
		new Actions(driver).click(driver.findElement(By.xpath("/html"))).perform();
		//target:driver.findElement(By.name("name"))
		new Actions(driver).click(driver.findElement(By.name("name"))).perform();
	}
	
	@Test
	public void variableTest() {
		int vInt = 1;
		List<WebElement> elements = driver.findElements(By.tagName("s"));
		driver.get("Helloworld");
		//target:driver.findElement(By.tagName("a"))
		new Actions(driver).click(driver.findElement(By.tagName("a"))).perform();
		//target:driver.findElements(By.tagName("s")).get(0)
		new Actions(driver).click(driver.findElements(By.tagName("s")).get(0)).perform();
		//target:elements.get(1)
		new Actions(driver).click(elements.get(1)).perform();
		//target:elements.get(vInt)
		new Actions(driver).click(elements.get(vInt)).perform();
		Assert.assertEquals(2.2,2.2);
	}
	
	@Test
	public void getElemenetAttrTest() {
		WebElement selectByID = driver.findElement(By.id("id"));
		Assert.assertNotNull(selectByID.getAttribute("Hello"));
		Assert.assertNotNull(driver.getTitle());
		Assert.assertTrue(selectByID.isEnabled());
		Assert.assertTrue(selectByID.isSelected());
		Assert.assertTrue(selectByID.isDisplayed());
		Assert.assertNotNull(selectByID.getTagName());
	}

}
   ---
*/

using Chrome driver;
driver implicitly wait 10s;

test selectorTest {
	let selectByID = $("#id")
	let selectByClass = $(".class")
	let selectByTagName = $("name")
	let selectByCssSelector = $("#id > li")
	let selectByXpath = $("/html")
	let selectByName = $("name='name'")
	mouse click on selectByID
	mouse click on selectByClass
	mouse click on selectByTagName
	mouse click on selectByCssSelector
	mouse click on selectByXpath
	mouse click on selectByName
}

test variableTest {
	let vInt = 1
	let vDouble = 2.2
	let vStr = "Helloworld"
	let element = $("a")
	let elements = $['s']
	let childElement = $['s'][0]
	let childElement2 = elements[1]
	let childElement3 = elements[vInt]
	open vStr
	mouse click on element
	mouse click on childElement
	mouse click on childElement2
	mouse click on childElement3
	assert vDouble == 2.2
}

test getElemenetAttrTest {
	let selectByID = $("#id")
	let attr = get attribute "Hello" from selectByID
	let titles = get title from window
	let tIsEnable = get isEnable from selectByID
	let tIsSelected = get isSelected from selectByID
	let tisDisplay = get isDisplay from selectByID
	let tTageName = get tagName from selectByID
	assert attr not null
	assert titles not null
	assert tIsEnable is true
	assert tIsSelected is true
	assert tisDisplay is true
	assert tTageName not null
}
