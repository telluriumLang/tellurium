grammar com.telluriumlang.Tellurium with org.eclipse.xtext.common.Terminals

generate tellurium "https://telluriumlang.github.io/tellurium"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

AutomationTestSet:
	testConfig += TestConfigurationStatement*
	testcases += TestCase*
;

TestConfigurationStatement:
	DriverConfig | DriverImplicityWait
;

DriverConfig:
	'using' type=DriverType 'driver' ';'
;

DriverImplicityWait:
	'driver' 'implicitly' 'wait' waitsec=INT 's' ';'
;

enum DriverType:
	HtmlUnit | Chrome | IE | Edge | Firefox | Safari
;

TestCase:
	'test' name=ID '{' statements+=TestStatement* '}'
;

TestStatement:
	OpenPage | Navigate | Window | QuitAndClose | KeyboardInput | MouseInput | Cookie | 
	VariableDeclaration
;

OpenPage:
	'open' target=Variables
;

Navigate:
	'navigate' action=NavigateAction
;

enum NavigateAction:
	back | forward | refresh
;

Window:
	'window' action=WindowActions
;

enum WindowActions:
	maximize | fullscreen
;

QuitAndClose:
	action= QuitAndCloseAction
;

enum QuitAndCloseAction:
	quit | close
;

KeyboardInput :
	SimpleKeyboardInput | ComplexKeyboardInput
;

SimpleKeyboardInput :
	'enter' keySequence = STRING ( 'into' target = STRING )? //TODO:change target to cross reference
;

ComplexKeyboardInput :
	'enter' modifier = ModifierKey "+" keySequence = STRING ( 'into' target = STRING )? //TODO:change target to cross reference
;

enum ModifierKey :
	shift | alt | ctrl | meta | win
;

MouseInput :
	'mouse' mAction = MouseAction ( 'on' target = STRING )? //TODO:change target to cross reference
;

enum MouseAction :
	click | doubleClick | clickAndHold | rightClick | release
;

Cookie :
	'cookie' action=CookieAction
;

CookieAction :
	CookieAdd | CookieDelete
;

CookieAdd :
	'add' key = STRING 'with' 'value' value = STRING
;

CookieDelete :
	{CookieDelete} 'delete' ( key = STRING | 'all' )
;

VariableDeclaration:
	 "let" name=ID "=" value=Variables
;

Variables:
	DoubleLitera | IntLitera | StringLitera | VarExpression
;

DoubleLitera:
	val = Double
;

IntLitera:
	val = INT
;

StringLitera:
	val = STRING
;

VarExpression:
	var = [VariableDeclaration]
;

Double returns ecore::EDouble hidden():
	INT? "." INT
;
